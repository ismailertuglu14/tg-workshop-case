// <auto-generated />
using System;
using CategoryAPI.Connection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ProductAPI.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20240709154246_mig9")]
    partial class mig9
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductAPI.Entities.Images", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("Order")
                        .HasColumnType("tinyint");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Order = (byte)1,
                            Path = "https://cdn.akakce.com/z/apple/iphone-14-pro-max.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            Order = (byte)2,
                            Path = "https://cdn.akakce.com/z/apple/iphone-14-pro-max-256-gb-altin.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            Order = (byte)1,
                            Path = "https://cdn.akakce.com/z/samsung/samsung-galaxy-m32.jpg",
                            ProductId = 2
                        });
                });

            modelBuilder.Entity("ProductAPI.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double?>("StarRate")
                        .HasColumnType("float");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CategoryTitle = "Elektronik",
                            CoverPath = "https://cdn.akakce.com/z/apple/iphone-14-pro-max.jpg",
                            CreatedDate = new DateTime(2024, 7, 9, 18, 42, 45, 975, DateTimeKind.Local).AddTicks(2730),
                            Price = 40.000m,
                            StarRate = 4.0,
                            Status = 1,
                            Title = "Iphone 14 Pro Max"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CategoryTitle = "Elektronik",
                            CoverPath = "https://cdn.akakce.com/z/samsung/samsung-galaxy-m32.jpg",
                            CreatedDate = new DateTime(2024, 7, 9, 18, 42, 45, 975, DateTimeKind.Local).AddTicks(2780),
                            Price = 32.000m,
                            StarRate = 4.0,
                            Status = 1,
                            Title = "Galaxy M32"
                        });
                });

            modelBuilder.Entity("ProductAPI.Entities.Images", b =>
                {
                    b.HasOne("ProductAPI.Entities.Product", null)
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductAPI.Entities.Product", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
